from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, ContextTypes, CommandHandler, MessageHandler, filters, ConversationHandler

# üîê –¢–≤–æ–π —Ç–æ–∫–µ–Ω
BOT_TOKEN = "7927069416:AAE3Irs2UoW1cxvLZsVGXuRG8xynN78KKxs"

# üë§ Telegram ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
ADMIN_ID = 902984899

# –°–æ—Å—Ç–æ—è–Ω–∏—è –∞–Ω–∫–µ—Ç—ã
DATE, LOCATION, GUESTS, BUDGET, WISHES, CONTACTS = range(6)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_keyboard = ReplyKeyboardMarkup(
    [["üìÖ –°–≤–æ–±–æ–¥–Ω—ã–µ –¥–∞—Ç—ã", "üì∏ –§–æ—Ç–æ"], ["üé• –í–∏–¥–µ–æ", "üìù –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É"]],
    resize_keyboard=True
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!\n"
        "–Ø ‚Äî –°–≤–µ—Ç–ª–∞–Ω–∞ –ú–∞–º–µ–¥–æ–≤–∞, –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏—Å—Å—ë—Ä –≤–∞—à–µ–π —Å–≤–∞–¥—å–±—ã! üíç\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ, —Å —á–µ–≥–æ –Ω–∞—á–Ω—ë–º üëá",
        reply_markup=main_keyboard
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    if text == "üìÖ –°–≤–æ–±–æ–¥–Ω—ã–µ –¥–∞—Ç—ã":
        await update.message.reply_text("üìÜ –£—Ç–æ—á–Ω–∏—Ç–µ –¥–∞—Ç—É —Å–≤–∞–¥—å–±—ã (–î–î.–ú–ú.–ì–ì–ì–ì):")
    elif text == "üì∏ –§–æ—Ç–æ":
        await update.message.reply_text("–ü—Ä–∏–º–µ—Ä—ã —Ñ–æ—Ç–æ —Ä–∞–±–æ—Ç: https://vk.com/vedushchaya73")
    elif text == "üé• –í–∏–¥–µ–æ":
        await update.message.reply_text(
            "–í–∏–¥–µ–æ 1: https://vk.com/wall181769417_4037\n"
            "–í–∏–¥–µ–æ 2: https://vkvideo.ru/video-43062629_456239273?t=1m4s"
        )
    elif text == "üìù –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É":
        await update.message.reply_text("üìÖ –í–∞—à–∞ –¥–∞—Ç–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è (–î–î.–ú–ú.–ì–ì–ì–ì):")
        return DATE

# üìù –ê–Ω–∫–µ—Ç–∞ —à–∞–≥–∏
async def ask_location(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["date"] = update.message.text
    await update.message.reply_text("üìç –£–∫–∞–∂–∏—Ç–µ –ª–æ–∫–∞—Ü–∏—é:")
    return LOCATION

async def ask_guests(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["location"] = update.message.text
    await update.message.reply_text("üë• –°–∫–æ–ª—å–∫–æ –≥–æ—Å—Ç–µ–π?")
    return GUESTS

async def ask_budget(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["guests"] = update.message.text
    await update.message.reply_text("üí∏ –û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω—ã–π –±—é–¥–∂–µ—Ç –Ω–∞ –≤–µ–¥—É—â–µ–≥–æ?")
    return BUDGET

async def ask_wishes(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["budget"] = update.message.text
    await update.message.reply_text("üí≠ –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–∏—Ö –ø–æ–∂–µ–ª–∞–Ω–∏—è—Ö:")
    return WISHES

async def ask_contacts(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["wishes"] = update.message.text
    await update.message.reply_text("üì≤ –í–∞—à–µ –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω/Telegram:")
    return CONTACTS

async def submit_form(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["contacts"] = update.message.text
    data = context.user_data
    text = (
        f"üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n\n"
        f"–î–∞—Ç–∞: {data['date']}\n"
        f"–õ–æ–∫–∞—Ü–∏—è: {data['location']}\n"
        f"–ì–æ—Å—Ç–∏: {data['guests']}\n"
        f"–ë—é–¥–∂–µ—Ç: {data['budget']}\n"
        f"–ü–æ–∂–µ–ª–∞–Ω–∏—è: {data['wishes']}\n"
        f"–ö–æ–Ω—Ç–∞–∫—Ç—ã: {data['contacts']}"
    )
    await context.bot.send_message(chat_id=ADMIN_ID, text=text)
    await update.message.reply_text("‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.")
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚ùå –ê–Ω–∫–µ—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    return ConversationHandler.END

def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    form = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("^üìù –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É$"), handle_message)],
        states={
            DATE: [MessageHandler(filters.TEXT & ~filters.COMMAND, ask_location)],
            LOCATION: [MessageHandler(filters.TEXT & ~filters.COMMAND, ask_guests)],
            GUESTS: [MessageHandler(filters.TEXT & ~filters.COMMAND, ask_budget)],
            BUDGET: [MessageHandler(filters.TEXT & ~filters.COMMAND, ask_wishes)],
            WISHES: [MessageHandler(filters.TEXT & ~filters.COMMAND, ask_contacts)],
            CONTACTS: [MessageHandler(filters.TEXT & ~filters.COMMAND, submit_form)],
        },
        fallbacks=[CommandHandler("cancel", cancel)]
    )

    app.add_handler(CommandHandler("start", start))
    app.add_handler(form)
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    app.run_polling()

if __name__ == "__main__":
    main()


