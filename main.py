from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes, ConversationHandler

BOT_TOKEN = "7927069416:AAE3Irs2UoW1cxvLZsVGXuRG8xynN78KKxs"  # –ó–ê–ú–ï–ù–ò –Ω–∞ —Ç–æ–∫–µ–Ω –æ—Ç Svadba73_Bot
ADMIN_ID = 902984899  # –¢–≤–æ–π Telegram ID

# –®–∞–≥–∏ –∞–Ω–∫–µ—Ç—ã
DATE, LOCATION, GUESTS, BUDGET, WISHES, CONTACTS = range(6)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        ["üìÖ –°–≤–æ–±–æ–¥–Ω—ã–µ –¥–∞—Ç—ã", "üì∏ –§–æ—Ç–æ"],
        ["üé• –í–∏–¥–µ–æ", "üìù –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!\n–Ø ‚Äî –°–≤–µ—Ç–ª–∞–Ω–∞ –ú–∞–º–µ–¥–æ–≤–∞, –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏—Å—Å—ë—Ä –≤–∞—à–µ–π —Å–≤–∞–¥—å–±—ã!\n–ü–æ–º–æ–≥–∞—é —Å–æ–∑–¥–∞—Ç—å –ø—Ä–∞–∑–¥–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø–æ–º–Ω–∏—Ç—Å—è –Ω–∞ –≤—Å—é –∂–∏–∑–Ω—å üíç\n\n–í—ã–±–µ—Ä–∏—Ç–µ, —Å —á–µ–≥–æ –Ω–∞—á–Ω—ë–º üëá",
        reply_markup=reply_markup
    )

async def photos(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üì∏ –ú–æ–∏ —Ñ–æ—Ç–æ:\nhttps://vk.com/vedushchaya73")

async def videos(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üé• –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, –º–æ–∏ —Ä–∞–±–æ—Ç—ã:\n"
        "‚Äî –í–∏–¥–µ–æ 1: https://vk.com/wall181769417_4037\n"
        "‚Äî –í–∏–¥–µ–æ 2: https://vkvideo.ru/video-43062629_456239273?t=1m4s"
    )

async def dates(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìÖ –£—Ç–æ—á–Ω–∏—Ç–µ –¥–∞—Ç—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è (–î–î.–ú–ú.–ì–ì–ì–ì), –∏ —è –ø—Ä–æ–≤–µ—Ä—é –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å üòâ")

# –ê–Ω–∫–µ—Ç–∞ - –ø–æ—à–∞–≥–æ–≤–∞—è —Ñ–æ—Ä–º–∞
async def form_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìÖ –í–∞—à–∞ –¥–∞—Ç–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è (–î–î.–ú–ú.–ì–ì–ì–ì):")
    return DATE

async def form_date(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["date"] = update.message.text
    await update.message.reply_text("üìç –õ–æ–∫–∞—Ü–∏—è (–≥–æ—Ä–æ–¥, –º–µ—Å—Ç–æ):")
    return LOCATION

async def form_location(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["location"] = update.message.text
    await update.message.reply_text("üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π:")
    return GUESTS

async def form_guests(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["guests"] = update.message.text
    await update.message.reply_text("üí∏ –ë—é–¥–∂–µ—Ç –Ω–∞ –≤–µ–¥—É—â–µ–≥–æ:")
    return BUDGET

async def form_budget(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["budget"] = update.message.text
    await update.message.reply_text("üí≠ –ü–æ–∂–µ–ª–∞–Ω–∏—è –ø–æ —Å–≤–∞–¥—å–±–µ:")
    return WISHES

async def form_wishes(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["wishes"] = update.message.text
    await update.message.reply_text("üì≤ –ö–æ–Ω—Ç–∞–∫—Ç (–∏–º—è –∏ –Ω–æ–º–µ—Ä/–Ω–∏–∫):")
    return CONTACTS

async def form_contacts(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["contacts"] = update.message.text
    summary = "\n".join([f"{k.capitalize()}: {v}" for k, v in context.user_data.items()])
    await context.bot.send_message(chat_id=ADMIN_ID, text=f"üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n{summary}")
    await update.message.reply_text("‚úÖ –°–ø–∞—Å–∏–±–æ! –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, —è —Å–≤—è–∂—É—Å—å —Å –≤–∞–º–∏ ‚ú®")
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üö´ –ê–Ω–∫–µ—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    return ConversationHandler.END

def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.Regex("üìÖ –°–≤–æ–±–æ–¥–Ω—ã–µ –¥–∞—Ç—ã"), dates))
    app.add_handler(MessageHandler(filters.Regex("üì∏ –§–æ—Ç–æ"), photos))
    app.add_handler(MessageHandler(filters.Regex("üé• –í–∏–¥–µ–æ"), videos))

    form_handler = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("üìù –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É"), form_start)],
        states={
            DATE: [MessageHandler(filters.TEXT & ~filters.COMMAND, form_date)],
            LOCATION: [MessageHandler(filters.TEXT & ~filters.COMMAND, form_location)],
            GUESTS: [MessageHandler(filters.TEXT & ~filters.COMMAND, form_guests)],
            BUDGET: [MessageHandler(filters.TEXT & ~filters.COMMAND, form_budget)],
            WISHES: [MessageHandler(filters.TEXT & ~filters.COMMAND, form_wishes)],
            CONTACTS: [MessageHandler(filters.TEXT & ~filters.COMMAND, form_contacts)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    app.add_handler(form_handler)
    app.run_polling()

if __name__ == "__main__":
    main()

